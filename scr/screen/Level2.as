package screen {		import flash.display.MovieClip;	import flash.events.Event;	import com.greensock.TweenLite;	import com.greensock.easing.*;	import char.Player;	import char.EnemyFactory;	import flash.display.Stage;			public class Level2 extends MovieClip {		//Consts		private const ENEMY_CHANCE:Number = 0.03;				//Vars		private var _player:Player;		private var _enemyBudget:Number;		private static var _bullets:Array = [];		private static var _enemies:Array = [];		private var _stage:Stage;		private var _previousHealth:Number;		public function Level2() {			init();		}				private function init():void {			//Vars			this.alpha = 0;			_stage = Main.getStage();			_enemyBudget = 20;						//Setting health			_previousHealth = Main.getPlayerHealth();			Main.setPlayerHealth(_previousHealth + 10);			if(Main.getPlayerHealth() > 100){				Main.setPlayerHealth(-Main.getPlayerHealth()+100);			}						//Setting level			Main.setLevel(2);			Main.lvlRunning(true);						//Event listeners			addEventListener(Event.ENTER_FRAME, levelLoop);			addEventListener(Event.ADDED_TO_STAGE, onAdded);			addEventListener(Event.REMOVED_FROM_STAGE, onRemoved);						//Add This			Main.getInstance().addChild(this);		}				private function onAdded(event:Event):void {			TweenLite.to(this, 0.5, {alpha:1});			_player = new Player();			trace("Level 2 reaady");		}				private function levelLoop(event:Event):void{			//Health bar			healthHolder.healthBar.scaleX = Main.getPlayerHealth() / 100;						//enemy creation			if(_enemyBudget <= 20 && _enemyBudget > 10){				if (ENEMY_CHANCE > Math.random()){					var randomEnemy:Number = Math.random()* 1;					//trace(randomEnemy);					if(randomEnemy <= 0.5){						//trace("Enemy 1");						var enemy1:MovieClip = char.EnemyFactory.makeEnemy("weak");						if(enemy1.stage == null){							Main.getInstance().addChild(enemy1);							_enemyBudget -= 1;							//trace("Enemy created");							//trace("Enemy budget is now " + _enemyBudget);						}											}					else if(randomEnemy > 0.5 && randomEnemy <= 0.8){						//trace("Enemy 2");						var enemy2:MovieClip = char.EnemyFactory.makeEnemy("quick");						if(enemy2.stage == null){							Main.getInstance().addChild(enemy2);							_enemyBudget -= 3;							//trace("Enemy created");							//trace("Enemy budget is now " + _enemyBudget);						}					}					else if(randomEnemy > 0.8 && randomEnemy <= 1){						//trace("Enemy 3");						var enemy3:MovieClip = char.EnemyFactory.makeEnemy("strong");						if(enemy3.stage == null){							Main.getInstance().addChild(enemy3);							_enemyBudget -= 3;							//trace("Enemy created");							//trace("Enemy budget is now " + _enemyBudget);						}					}					else if(randomEnemy > 1 && randomEnemy <= 1.2){						//trace("Enemy 4");						var enemy4:MovieClip = char.EnemyFactory.makeEnemy("power");						if (enemy4.stage == null){						Main.getInstance().addChild(enemy4);							_enemyBudget -= 4;							//trace("Enemy created");							//trace("Enemy budget is now " + _enemyBudget);						}					}				}			}						else if (_enemyBudget <= 10 && _enemyBudget >0){				if (ENEMY_CHANCE > Math.random()){					var randomEnemy:Number = Math.random() * 0.5;					if(randomEnemy <= 0.5){						//trace("Enemy 1");						var enemy1:MovieClip = char.EnemyFactory.makeEnemy("weak");						if(enemy1.stage == null){							Main.getInstance().addChild(enemy1);							_enemyBudget -= 1;							//trace("Enemy created");							//trace("Enemy budget is now " + _enemyBudget);						}					}					else if(randomEnemy > 0.5 && randomEnemy <= 0.8){						//trace("Enemy 2");						var enemy2:MovieClip = char.EnemyFactory.makeEnemy("quick");						if(enemy2.stage == null){							Main.getInstance().addChild(enemy2);							_enemyBudget -= 3;							//trace("Enemy created");							//trace("Enemy budget is now " + _enemyBudget);						}					}					else if(randomEnemy > 0.8 && randomEnemy <= 1){						//trace("Enemy 3");						var enemy3:MovieClip = char.EnemyFactory.makeEnemy("strong");						if(enemy3.stage == null){							Main.getInstance().addChild(enemy3);							_enemyBudget -= 3;							//trace("Enemy created");							//trace("Enemy budget is now " + _enemyBudget);						}					}				}			}						if(_enemyBudget <= 0){				//trace(_enemies.length);				if(_enemies.length == 0){					TweenLite.to(this, 1, {alpha: 0});					TweenLite.to(_player, 1, {alpha: 0});					if( this.alpha <= 0){						if(_player.parent){							_player.parent.removeChild(_player);						}						if(this.parent){							this.parent.removeChild(this);						}												_bullets = [];						_enemies = [];												_stage.dispatchEvent( new Event("levelComplete", true));						trace("Level 2 end");					}				}			}						if( Main.getPlayerHealth() <= 0){				_enemies.splice( 0, _enemies.length);				TweenLite.to(this, 1, {alpha: 0});				TweenLite.to(_player, 1, {alpha: 0});				if( this.alpha <= 0){					if(_player.parent){						_player.parent.removeChild(_player);					}					if(this.parent){						this.parent.removeChild(this);					}										_stage.dispatchEvent( new Event("levelComplete", true));					trace("Level 1 end");				}			}						for (var i:int = _enemies.length - 1; i >= 0; i--){				for(var j:int = _bullets.length - 1; j >= 0; j--){					if(_bullets[j] != null && _enemies[i] != null){						//Check if bullet hits enemy						if(_bullets[j].hitTestObject(_enemies[i])){							//Tells enemy he's hit							if (_enemies[i] != null && _bullets[j] != null){								Main.setScore(1);								if (_bullets[j].parent) {									_bullets[j].parent.removeChild(_bullets[j]);								}								_bullets[j] == null;								_enemies[i].isHit(_bullets[j].getType());								trace(_enemies[i] + "" + i + " is hit and now has " + _enemies[i].getHealth())								if(_enemies[i] != null){									if(_enemies[i].getHealth() <= 0){											_enemies.splice(i, 1);									}								}								return;							}						}					}										if(_bullets[j].x > _stage.stageWidth + _bullets[j].width/2){						if (_bullets[j].parent) {							_bullets[j].parent.removeChild(_bullets[j]);						}						_bullets[j] == null;					}				}								//Check if player hit				if(_enemies[i] != null && _player != null){					if(_enemies[i].hitTestObject(_player)){						Main.setPlayerHealth(-25);						if (_enemies[i] != null){							_enemies[i].isHit("player");							if(_enemies[i].getHealth() <= 0){								_enemies.splice(i, 1);							}						}					}				}								if( _enemies[i] != null){					if(_enemies[i].x - _enemies[i].width <= 0){						_enemies.splice( i, 1);					}				}			}		}				private function onRemoved(event:Event):void{			removeEventListener(Event.ENTER_FRAME, levelLoop);			removeEventListener(Event.ADDED_TO_STAGE, onAdded);			removeEventListener(Event.REMOVED_FROM_STAGE, onRemoved);			Main.lvlRunning(false);		}				//Get instance		public static function addBullet(bullet:MovieClip):void {			_bullets.push(MovieClip(bullet));		}				public static function addEnemy(enemy:MovieClip):void{			_enemies.push(MovieClip(enemy));			//trace(enemy + " was added to enemy array.");		}	}	}